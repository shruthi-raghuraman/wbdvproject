{"version":3,"sources":["components/Message.js","components/FileUpload.js","App.js","index.js"],"names":["Message","msg","className","role","type","data-dismiss","aria-label","aria-hidden","getRecipes","dishes","a","response","axios","get","console","error","FileUpload","useState","file","setFile","filename","setFilename","uploadedFile","setUploadedFile","message","setMessage","labels","setLabels","onSubmit","e","preventDefault","formData","FormData","append","process","post","headers","res","data","fileName","filePath","resultSummaries","Promise","all","map","label","description","recipe","hits","labelsWithRecipe","log","err","id","onChange","target","files","name","htmlFor","value","style","width","src","alt","score","image","App","ReactDOM","render","document","getElementById"],"mappings":"gSAwBeA,EApBC,SAAC,GAAa,IAAXC,EAAU,EAAVA,IACf,OACI,yBAAKC,UAAU,+CAA+CC,KAAK,SAC9DF,EACD,4BACIG,KAAK,SACLF,UAAU,QACVG,eAAa,QACbC,aAAW,SAEX,0BAAMC,cAAY,QAAlB,W,gBCVVC,EAAU,uCAAG,WAAMC,GAAN,eAAAC,EAAA,6DACXC,EAAW,GADA,kBAIDC,IAAMC,IAAN,mGAC0FJ,EAD1F,iBAJC,OAGXE,EAHW,uDAOXG,QAAQC,MAAM,4CAPH,2CASJJ,GATI,+DAAH,sDA0GDK,EA7FI,WAAO,IAAD,EACGC,mBAAS,IADZ,mBACdC,EADc,KACRC,EADQ,OAEWF,mBAAS,eAFpB,mBAEdG,EAFc,KAEJC,EAFI,OAGmBJ,mBAAS,IAH5B,mBAGdK,EAHc,KAGAC,EAHA,OAISN,mBAAS,IAJlB,mBAIdO,EAJc,KAILC,EAJK,OAKOR,mBAAS,IALhB,mBAKdS,EALc,KAKNC,EALM,KAYfC,EAAQ,uCAAG,WAAMC,GAAN,2BAAAnB,EAAA,6DACbmB,EAAEC,kBACIC,EAAW,IAAIC,UACZC,OAAO,OAAQf,GAHX,SAMuCgB,kDANvC,SAOStB,IAAMuB,KAAN,UAD8BD,kDAC9B,WAAgCH,EAAU,CACxDK,QAAS,CACL,eAAgB,yBATf,cAOHC,EAPG,SAaqCA,EAAIC,KAA3CC,EAbE,EAaFA,SAAUC,EAbR,EAaQA,SAAUC,EAblB,EAakBA,gBAblB,UAesBC,QAAQC,IAAIF,EAAgBG,IAAhB,uCAAoB,WAAMC,GAAN,eAAAnC,EAAA,sEACtCF,EAAWqC,EAAMC,aADqB,aACrDC,EADqD,SAG7CA,EAAOT,MAAQS,EAAOT,KAAKU,MAHkB,wDAI5CH,EAJ4C,CAIrCE,OAAQA,EAAOT,KAAKU,KAAK,GAAGD,UAJS,gCAMpD,CAACF,QAAOE,OAAQ,OANoC,2CAApB,wDAflC,QAeHE,EAfG,OAyBT1B,EAAgB,CAACgB,WAAUC,aAC3Bb,EAAUsB,GAEVxB,EAAW,iBA5BF,kDA8BTX,QAAQoC,IAAI,CAACC,IAAG,OA9BP,0DAAH,sDAuCd,OACI,kBAAC,WAAD,KACK3B,EAAU,kBAAC,EAAD,CAASvB,IAAKuB,IAAa,KACtC,0BAAMI,SAAUA,GACZ,yBAAK1B,UAAU,oBACX,2BACIE,KAAK,OACLF,UAAU,oBACVkD,GAAG,aACHC,SArDH,SAAAxB,GACbV,EAAQU,EAAEyB,OAAOC,MAAM,IACvBlC,EAAYQ,EAAEyB,OAAOC,MAAM,GAAGC,SAqDlB,2BAAOtD,UAAU,oBAAoBuD,QAAQ,cACxCrC,IAIT,2BACIhB,KAAK,SACLsD,MAAM,SACNxD,UAAU,oCAIjBoB,EACG,yBAAKpB,UAAU,YACX,yBAAKA,UAAU,mBACX,wBAAIA,UAAU,eAAeoB,EAAaiB,UAC1C,yBAAKoB,MAAO,CAACC,MAAO,QAASC,IAAKvC,EAAakB,SAAUsB,IAAI,OAGrE,KACHpC,EAAOkB,KAAI,SAAAC,GAAK,OAAI,6BACjB,sCAAYA,EAAMC,aAClB,qCAAWD,EAAMkB,OAEhBlB,EAAME,QAAW,oCAAE,yDAA+BF,EAAME,OAAOF,OAC5D,yBAAKgB,IAAKhB,EAAME,OAAOiB,MAAOF,IAAKjB,EAAME,OAAOF,eC1FrDoB,G,MAVH,kBACR,yBAAK/D,UAAU,kBACX,wBAAIA,UAAU,8BACV,uBAAGA,UAAU,uBADjB,mBAIA,kBAAC,EAAD,SCNRgE,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.d723619c.chunk.js","sourcesContent":["\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Message = ({ msg }) => {\n    return (\n        <div className='alert alert-info alert-dismissible fade show' role='alert'>\n            {msg}\n            <button\n                type='button'\n                className='close'\n                data-dismiss='alert'\n                aria-label='Close'\n            >\n                <span aria-hidden='true'>&times;</span>\n            </button>\n        </div>\n    );\n};\n\nMessage.propTypes = {\n    msg: PropTypes.string.isRequired\n};\n\nexport default Message;","import React, {Fragment, useState} from 'react';\nimport Message from './Message';\nimport axios from 'axios';\n\nconst getRecipes = async dishes => {\n    let response = {}\n    try {\n        response =\n            await axios.get(\n                `https://api.edamam.com/search?app_id=8c82a996&app_key=4c99b8e052177acab7281af278080f6f&q=${dishes}&from=0&to=1`);\n    } catch {\n        console.error(\"There's an error while fetching the data\")\n    } finally {\n        return response\n    }\n}\n\nconst FileUpload = () => {\n    const [file, setFile] = useState('');\n    const [filename, setFilename] = useState('Choose File');\n    const [uploadedFile, setUploadedFile] = useState({});\n    const [message, setMessage] = useState('');\n    const [labels, setLabels] = useState([])\n\n    const onChange = e => {\n        setFile(e.target.files[0]);\n        setFilename(e.target.files[0].name);\n    };\n\n    const onSubmit = async e => {\n        e.preventDefault();\n        const formData = new FormData();\n        formData.append('file', file);\n\n        try {\n            const API_URL = process.env.REACT_APP_API_URL ? process.env.REACT_APP_API_URL : \"\";\n            const res = await axios.post(`${API_URL}/upload`, formData, {\n                headers: {\n                    'Content-Type': 'multipart/form-data'\n                },\n            });\n\n            const {fileName, filePath, resultSummaries} = res.data;\n\n            const labelsWithRecipe = await Promise.all(resultSummaries.map(async label => {\n                const recipe = await getRecipes(label.description);\n\n                if (recipe && recipe.data && recipe.data.hits) {\n                    return {...label, recipe: recipe.data.hits[0].recipe}\n                }\n                return {label, recipe: null};\n\n            }))\n\n            setUploadedFile({fileName, filePath});\n            setLabels(labelsWithRecipe);\n\n            setMessage('File Uploaded');\n        } catch (err) {\n            console.log({err});\n            // if (err && err.response && err.response.status === 500) {\n            //     setMessage('There was a problem with the server');\n            // } else {\n            //     setMessage(err.response.data.msg);\n            // }\n        }\n    };\n\n    return (\n        <Fragment>\n            {message ? <Message msg={message}/> : null}\n            <form onSubmit={onSubmit}>\n                <div className='custom-file mt-4'>\n                    <input\n                        type='file'\n                        className='custom-file-input'\n                        id='customFile'\n                        onChange={onChange}\n                    />\n                    <label className='custom-file-label' htmlFor='customFile'>\n                        {filename}\n                    </label>\n                </div>\n\n                <input\n                    type='submit'\n                    value='Upload'\n                    className='btn btn-primary btn-block mt-4'\n                />\n            </form>\n            {/* Uploaded file renders */}\n            {uploadedFile ? (\n                <div className='row mt-5'>\n                    <div className='col-md-6 m-auto'>\n                        <h3 className='text-center'>{uploadedFile.fileName}</h3>\n                        <img style={{width: '100%'}} src={uploadedFile.filePath} alt=''/>\n                    </div>\n                </div>\n            ) : null}\n            {labels.map(label => <div>\n                <h1>Guess: {label.description}</h1>\n                <p>Score: {label.score}</p>\n\n                {label.recipe && (<><h1>Matched recipe for today: {label.recipe.label}</h1>\n                    <img src={label.recipe.image} alt={label.recipe.label}/></>)}\n            </div>)}\n        </Fragment>\n    );\n};\n\nexport default FileUpload;","import React from 'react';\nimport FileUpload from './components/FileUpload';\nimport './App.css';\n\nconst App = () => (\n    <div className='container mt-4'>\n        <h4 className='display-4 text-center mt-4'>\n            <i className='fas fa-cookie-bite' /> Recipes Finder\n        </h4>\n\n        <FileUpload />\n    </div>\n);\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}